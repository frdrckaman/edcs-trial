# Generated by Django 3.0 on 2020-12-22 12:45

import _socket
from django.db import migrations, models
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_forms.studyYearMixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BacteriologicalConfirmedPulmonaryTB',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('age_15_24', models.IntegerField(verbose_name='15-24')),
                ('age_25_34', models.IntegerField(verbose_name='25-34')),
                ('age_35_44', models.IntegerField(verbose_name='35-44')),
                ('age_45_54', models.IntegerField(verbose_name='45-54')),
                ('age_55_64', models.IntegerField(verbose_name='55-64')),
                ('age_65_above', models.IntegerField(verbose_name='65 and Above')),
                ('gender_male', models.IntegerField(default=0, verbose_name='Male')),
                ('gender_female', models.IntegerField(default=0, verbose_name='Female')),
                ('soc_econ_pos_low', models.IntegerField(default=0, verbose_name='Low')),
                ('soc_econ_pos_middle', models.IntegerField(default=0, verbose_name='Middle')),
                ('soc_econ_pos_high', models.IntegerField(default=0, verbose_name='High')),
            ],
            options={
                'verbose_name': 'Bacteriological Confirmed Pulmonary TB',
                'verbose_name_plural': 'Bacteriological Confirmed Pulmonary TB',
            },
        ),
        migrations.CreateModel(
            name='ClusterPrevalenceSurvey',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('cluster_name', models.CharField(max_length=60, verbose_name='Cluster Name')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=8, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=8, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Cluster Prevalence Survey',
                'verbose_name_plural': 'Cluster Prevalence Survey',
            },
        ),
        migrations.CreateModel(
            name='RetroYears',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('year', models.IntegerField(default=0, verbose_name='Retro-Year')),
            ],
            options={
                'verbose_name': 'Retrospective year',
                'verbose_name_plural': 'Retrospective years',
                'ordering': ('year',),
            },
        ),
        migrations.CreateModel(
            name='SmearPositiveTB',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('year', models.IntegerField(default=0, verbose_name='Year')),
                ('age_15_24', models.IntegerField(verbose_name='15-24')),
                ('age_25_34', models.IntegerField(verbose_name='25-34')),
                ('age_35_44', models.IntegerField(verbose_name='35-44')),
                ('age_45_54', models.IntegerField(verbose_name='45-54')),
                ('age_55_64', models.IntegerField(verbose_name='55-64')),
                ('age_65_above', models.IntegerField(verbose_name='65 and Above')),
                ('gender_male', models.IntegerField(default=0, verbose_name='Male')),
                ('gender_female', models.IntegerField(default=0, verbose_name='Female')),
                ('soc_econ_pos_low', models.IntegerField(default=0, verbose_name='Low')),
                ('soc_econ_pos_middle', models.IntegerField(default=0, verbose_name='Middle')),
                ('soc_econ_pos_high', models.IntegerField(default=0, verbose_name='High')),
            ],
            options={
                'verbose_name': 'Smear Positive Pulmonary TB',
                'verbose_name_plural': 'Smear Positive Pulmonary TB',
            },
            bases=(edc_forms.studyYearMixin.StudyYearMixin, models.Model),
        ),
    ]
